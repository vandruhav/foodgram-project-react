[{"C:\\Dev\\foodgram-project-react\\frontend\\src\\index.js":"1","C:\\Dev\\foodgram-project-react\\frontend\\src\\reportWebVitals.js":"2","C:\\Dev\\foodgram-project-react\\frontend\\src\\App.js":"3","C:\\Dev\\foodgram-project-react\\frontend\\src\\api\\index.js":"4","C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\index.js":"5","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\index.js":"6","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\index.js":"7","C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\auth-context.js":"8","C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\user-context.js":"9","C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\recipes-context.js":"10","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\footer\\index.js":"11","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\main\\index.js":"12","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\card\\index.js":"13","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\link\\index.js":"14","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\header\\index.js":"15","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\index.js":"16","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\container\\index.js":"17","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\card-list\\index.js":"18","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\form\\index.js":"19","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\button\\index.js":"20","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\title\\index.js":"21","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\protected-route\\index.js":"22","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\account-menu\\index.js":"23","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\tag\\index.js":"24","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\input\\index.js":"25","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\textarea\\index.js":"26","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\tags-container\\index.js":"27","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\pagination\\index.js":"28","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\nav\\index.js":"29","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\checkbox-group\\index.js":"30","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\purchase-list\\index.js":"31","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\purchase\\index.js":"32","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\checkbox\\index.js":"33","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\subscription\\index.js":"34","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\file-input\\index.js":"35","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\subscription-list\\index.js":"36","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\ingredients-search\\index.js":"37","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\signin\\index.js":"38","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\main\\index.js":"39","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\single-card\\index.js":"40","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\signup\\index.js":"41","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\cart\\index.js":"42","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\favorites\\index.js":"43","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\subscriptions\\index.js":"44","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\recipe-edit\\index.js":"45","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\change-password\\index.js":"46","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\user\\index.js":"47","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\recipe-create\\index.js":"48","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star-active\\index.js":"49","C:\\Dev\\foodgram-project-react\\frontend\\src\\configs\\navigation.js":"50","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star-big\\index.js":"51","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\arrow-left\\index.js":"52","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star\\index.js":"53","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star-big-active\\index.js":"54","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\done\\index.js":"55","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\user\\index.js":"56","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\check\\index.js":"57","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\clock\\index.js":"58","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\plus\\index.js":"59","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\arrow-right\\index.js":"60","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\index.js":"61","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\single-card\\description\\index.js":"62","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\single-card\\ingredients\\index.js":"63","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\hex-to-rgba.js":"64","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-tags.js":"65","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-recipe.js":"66","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\validation.js":"67","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-recipes.js":"68","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-subscriptions.js":"69"},{"size":592,"mtime":1664733503000,"results":"70","hashOfConfig":"71"},{"size":362,"mtime":1664733503000,"results":"72","hashOfConfig":"71"},{"size":6398,"mtime":1664733503000,"results":"73","hashOfConfig":"71"},{"size":9114,"mtime":1664733503000,"results":"74","hashOfConfig":"71"},{"size":187,"mtime":1664733503000,"results":"75","hashOfConfig":"71"},{"size":1300,"mtime":1664733503000,"results":"76","hashOfConfig":"71"},{"size":533,"mtime":1664733503000,"results":"77","hashOfConfig":"71"},{"size":63,"mtime":1664733503000,"results":"78","hashOfConfig":"71"},{"size":63,"mtime":1664733503000,"results":"79","hashOfConfig":"71"},{"size":64,"mtime":1664733503000,"results":"80","hashOfConfig":"71"},{"size":387,"mtime":1664733503000,"results":"81","hashOfConfig":"71"},{"size":188,"mtime":1664733503000,"results":"82","hashOfConfig":"71"},{"size":2283,"mtime":1664733503000,"results":"83","hashOfConfig":"71"},{"size":418,"mtime":1664733503000,"results":"84","hashOfConfig":"71"},{"size":456,"mtime":1664733503000,"results":"85","hashOfConfig":"71"},{"size":579,"mtime":1664733503000,"results":"86","hashOfConfig":"71"},{"size":228,"mtime":1664733503000,"results":"87","hashOfConfig":"71"},{"size":172,"mtime":1664733503000,"results":"88","hashOfConfig":"71"},{"size":268,"mtime":1664733503000,"results":"89","hashOfConfig":"71"},{"size":634,"mtime":1664733503000,"results":"90","hashOfConfig":"71"},{"size":209,"mtime":1664733503000,"results":"91","hashOfConfig":"71"},{"size":354,"mtime":1664733503000,"results":"92","hashOfConfig":"71"},{"size":931,"mtime":1664733503000,"results":"93","hashOfConfig":"71"},{"size":341,"mtime":1664733503000,"results":"94","hashOfConfig":"71"},{"size":1195,"mtime":1664733503000,"results":"95","hashOfConfig":"71"},{"size":1007,"mtime":1664733503000,"results":"96","hashOfConfig":"71"},{"size":390,"mtime":1664733503000,"results":"97","hashOfConfig":"71"},{"size":1655,"mtime":1664733503000,"results":"98","hashOfConfig":"71"},{"size":959,"mtime":1664733503000,"results":"99","hashOfConfig":"71"},{"size":846,"mtime":1664733503000,"results":"100","hashOfConfig":"71"},{"size":437,"mtime":1664733503000,"results":"101","hashOfConfig":"71"},{"size":999,"mtime":1664733503000,"results":"102","hashOfConfig":"71"},{"size":748,"mtime":1664733503000,"results":"103","hashOfConfig":"71"},{"size":2340,"mtime":1664733503000,"results":"104","hashOfConfig":"71"},{"size":1344,"mtime":1664733503000,"results":"105","hashOfConfig":"71"},{"size":435,"mtime":1664733503000,"results":"106","hashOfConfig":"71"},{"size":350,"mtime":1664733503000,"results":"107","hashOfConfig":"71"},{"size":1620,"mtime":1664733503000,"results":"108","hashOfConfig":"71"},{"size":2024,"mtime":1664733503000,"results":"109","hashOfConfig":"71"},{"size":4348,"mtime":1664733503000,"results":"110","hashOfConfig":"71"},{"size":2040,"mtime":1664733503000,"results":"111","hashOfConfig":"71"},{"size":1554,"mtime":1664733503000,"results":"112","hashOfConfig":"71"},{"size":2071,"mtime":1664733503000,"results":"113","hashOfConfig":"71"},{"size":1468,"mtime":1664733503000,"results":"114","hashOfConfig":"71"},{"size":10056,"mtime":1664733503000,"results":"115","hashOfConfig":"71"},{"size":1910,"mtime":1664733503000,"results":"116","hashOfConfig":"71"},{"size":3726,"mtime":1664733503000,"results":"117","hashOfConfig":"71"},{"size":8428,"mtime":1664733503000,"results":"118","hashOfConfig":"71"},{"size":324,"mtime":1664733503000,"results":"119","hashOfConfig":"71"},{"size":433,"mtime":1664733503000,"results":"120","hashOfConfig":"71"},{"size":494,"mtime":1664733503000,"results":"121","hashOfConfig":"71"},{"size":1591,"mtime":1664733503000,"results":"122","hashOfConfig":"71"},{"size":290,"mtime":1664733503000,"results":"123","hashOfConfig":"71"},{"size":517,"mtime":1664733503000,"results":"124","hashOfConfig":"71"},{"size":429,"mtime":1664733503000,"results":"125","hashOfConfig":"71"},{"size":522,"mtime":1664733503000,"results":"126","hashOfConfig":"71"},{"size":331,"mtime":1664733503000,"results":"127","hashOfConfig":"71"},{"size":521,"mtime":1664733503000,"results":"128","hashOfConfig":"71"},{"size":417,"mtime":1664733503000,"results":"129","hashOfConfig":"71"},{"size":1565,"mtime":1664733503000,"results":"130","hashOfConfig":"71"},{"size":381,"mtime":1664733503000,"results":"131","hashOfConfig":"71"},{"size":384,"mtime":1664733503000,"results":"132","hashOfConfig":"71"},{"size":613,"mtime":1664733503000,"results":"133","hashOfConfig":"71"},{"size":260,"mtime":1664733503000,"results":"134","hashOfConfig":"71"},{"size":353,"mtime":1664733503000,"results":"135","hashOfConfig":"71"},{"size":1573,"mtime":1664733503000,"results":"136","hashOfConfig":"71"},{"size":1264,"mtime":1664733503000,"results":"137","hashOfConfig":"71"},{"size":1643,"mtime":1664733503000,"results":"138","hashOfConfig":"71"},{"size":983,"mtime":1664733503000,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1phpg4u",{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},"C:\\Dev\\foodgram-project-react\\frontend\\src\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\App.js",["378","379","380","381","382","383"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route, useHistory, Redirect, useLocation } from 'react-router-dom'\nimport React, { useState, useEffect } from 'react'\nimport { Header, Footer, ProtectedRoute } from './components'\nimport api from './api'\nimport styles from './styles.module.css'\nimport cn from 'classnames'\nimport hamburgerImg from './images/hamburger-menu.png'\n\nimport {\n  Main,\n  Cart,\n  SignIn,\n  Subscriptions,\n  Favorites,\n  SingleCard,\n  SignUp,\n  RecipeEdit,\n  RecipeCreate,\n  User,\n  ChangePassword\n} from './pages'\n\nimport { AuthContext, UserContext } from './contexts'\n\nfunction App() {\n  const [ loggedIn, setLoggedIn ] = useState(null)\n  const [ user, setUser ] = useState({})\n  const [ loading, setLoading ] = useState(false)\n  const [ orders, setOrders ] = useState(0)\n  const [ menuToggled, setMenuToggled ] = useState(false)\n  const location = useLocation()\n\n  const registration = ({\n    email,\n    password,\n    username,\n    first_name,\n    last_name\n  }) => {\n    api.signup({ email, password, username, first_name, last_name })\n      .then(res => {\n        history.push('/signin')\n      })\n      .catch(err => {\n        const errors = Object.values(err)\n        if (errors) {\n          alert(errors.join(', '))\n        }\n        setLoggedIn(false)\n      })\n  }\n\n  const changePassword = ({\n    new_password,\n    current_password\n  }) => {\n    api.changePassword({ new_password, current_password })\n      .then(res => {\n        history.push('/signin')\n      })\n      .catch(err => {\n        const errors = Object.values(err)\n        if (errors) {\n          alert(errors.join(', '))\n        }\n      })\n  }\n\n  const authorization = ({\n    email, password\n  }) => {\n    api.signin({\n      email, password\n    }).then(res => {\n      if (res.auth_token) {\n        localStorage.setItem('token', res.auth_token)\n        api.getUserData()\n          .then(res => {\n            setUser(res)\n            setLoggedIn(true)\n            getOrders()\n          })\n          .catch(err => {\n            setLoggedIn(false)\n            history.push('/signin')\n          })\n      } else {\n        setLoggedIn(false)\n      }\n    })\n    .catch(err => {\n      const errors = Object.values(err)\n      if (errors) {\n        alert(errors.join(', '))\n      }\n      setLoggedIn(false)\n    })\n  }\n\n  const loadSingleItem = ({ id, callback }) => {\n    setTimeout(_ => {\n      callback()\n    }, 3000)\n  }\n\n  const history = useHistory()\n  const onSignOut = () => {\n    api\n      .signout()\n      .then(res => {\n        localStorage.removeItem('token')\n        setLoggedIn(false)\n      })\n      .catch(err => {\n        const errors = Object.values(err)\n        if (errors) {\n          alert(errors.join(', '))\n        }\n      })\n  }\n\n  useEffect(_ => {\n    if (loggedIn) {\n      // history.push('/recipes')\n    }\n  }, [loggedIn])\n\n  const getOrders = () => {\n    api\n      .getRecipes({\n        page: 1,\n        is_in_shopping_cart: Number(true)\n      })\n      .then(res => {\n        const { count } = res\n        setOrders(count)\n      })\n  }\n\n  const updateOrders = (add) => {\n    if (!add && orders <= 0) { return }\n    if (add) {\n      setOrders(orders + 1)\n    } else {\n      setOrders(orders - 1)\n    }\n  }\n\n  useEffect(_ => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      return api.getUserData()\n        .then(res => {\n          setUser(res)\n          setLoggedIn(true)\n          getOrders()\n        })\n        .catch(err => {\n          setLoggedIn(false)\n          history.push('/signin')\n        })\n    }\n    setLoggedIn(false)\n  }, [])\n\n  if (loggedIn === null) {\n    return <div className={styles.loading}>Loading!!</div>\n  }\n  \n  return <AuthContext.Provider value={loggedIn}>\n    <UserContext.Provider value={user}>\n      <div className={cn(\"App\", {\n        [styles.appMenuToggled]: menuToggled\n      })}>\n        <div\n          className={styles.menuButton}\n          onClick={_ => setMenuToggled(!menuToggled)}\n        >\n          <img src={hamburgerImg} />\n        </div>\n        <Header orders={orders} loggedIn={loggedIn} onSignOut={onSignOut} />\n        <Switch>\n          <ProtectedRoute\n            exact\n            path='/user/:id'\n            component={User}\n            loggedIn={loggedIn}\n            updateOrders={updateOrders}\n          />\n          <ProtectedRoute\n            exact\n            path='/cart'\n            component={Cart}\n            orders={orders}\n            loggedIn={loggedIn}\n            updateOrders={updateOrders}\n          />\n          <ProtectedRoute\n            exact\n            path='/subscriptions'\n            component={Subscriptions}\n            loggedIn={loggedIn}\n          />\n\n          <ProtectedRoute\n            exact\n            path='/favorites'\n            component={Favorites}\n            loggedIn={loggedIn}\n            updateOrders={updateOrders}\n          />\n\n          <ProtectedRoute\n            exact\n            path='/recipes/create'\n            component={RecipeCreate}\n            loggedIn={loggedIn}\n          />\n\n          <ProtectedRoute\n            exact\n            path='/recipes/:id/edit'\n            component={RecipeEdit}\n            loggedIn={loggedIn}\n            loadItem={loadSingleItem}\n            onItemDelete={getOrders}\n          />\n          <ProtectedRoute\n            exact\n            path='/change-password'\n            component={ChangePassword}\n            loggedIn={loggedIn}\n            onPasswordChange={changePassword}\n          />\n\n          <Route\n            exact\n            path='/recipes/:id'\n          >\n            <SingleCard\n              loggedIn={loggedIn}\n              loadItem={loadSingleItem}\n              updateOrders={updateOrders}\n            />\n          </Route>\n\n          <Route exact path='/recipes'>\n            <Main\n              updateOrders={updateOrders}\n            />\n          </Route>\n\n\n          <Route exact path='/signin'>\n            <SignIn\n              onSignIn={authorization}\n            />\n          </Route>\n          <Route exact path='/signup'>\n            <SignUp\n              onSignUp={registration}\n            />\n          </Route>\n          <Route path='/'>\n            {loggedIn ? <Redirect to='/recipes' /> : <Redirect to='/signin'/>}\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </UserContext.Provider>\n  </AuthContext.Provider>\n}\n\nexport default App;\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\api\\index.js",["384","385"],[],"class Api {\n  constructor (url, headers) {\n    this._url = url\n    this._headers = headers\n  }\n\n  checkResponse (res) {\n    return new Promise((resolve, reject) => {\n      if (res.status === 204) {\n        return resolve(res)\n      }\n      const func = res.status < 400 ? resolve : reject\n      res.json().then(data => func(data))\n    })\n  }\n\n  checkFileDownloadResponse (res) {\n    return new Promise((resolve, reject) => {\n      if (res.status < 400) {\n        return res.blob().then(blob => {\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = \"shopping-list\";\n          document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n          a.click();    \n          a.remove();  //afterwards we remove the element again \n        })\n      }\n      reject()\n    })\n  }\n\n  signin ({ email, password }) {\n    return fetch(\n      '/api/auth/token/login/',\n      {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          email, password\n        })\n      }\n    ).then(this.checkResponse)\n  }\n\n  signout () {\n    const token = localStorage.getItem('token')\n    return fetch(\n      '/api/auth/token/logout/',\n      {\n        method: 'POST',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  signup ({ email, password, username, first_name, last_name }) {\n    return fetch(\n      `/api/users/`,\n      {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          email, password, username, first_name, last_name\n        })\n      }\n    ).then(this.checkResponse)\n  }\n\n  getUserData () {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/me/`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  changePassword ({ current_password, new_password }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/set_password/`,\n      {\n        method: 'POST',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        },\n        body: JSON.stringify({ current_password, new_password })\n      }\n    ).then(this.checkResponse)\n  }\n\n\n  // recipes\n\n  getRecipes ({\n    page = 1,\n    limit = 6,\n    is_favorited = 0,\n    is_in_shopping_cart = 0,\n    author,\n    tags\n  } = {}) {\n      const token = localStorage.getItem('token')\n      const authorization = token ? { 'authorization': `Token ${token}` } : {}\n      const tagsString = tags ? tags.filter(tag => tag.value).map(tag => `&tags=${tag.slug}`).join('') : ''\n      return fetch(\n        `/api/recipes/?page=${page}&limit=${limit}${author ? `&author=${author}` : ''}${is_favorited ? `&is_favorited=${is_favorited}` : ''}${is_in_shopping_cart ? `&is_in_shopping_cart=${is_in_shopping_cart}` : ''}${tagsString}`,\n        {\n          method: 'GET',\n          headers: {\n            ...this._headers,\n            ...authorization\n          }\n        }\n      ).then(this.checkResponse)\n  }\n\n  getRecipe ({\n    recipe_id\n  }) {\n    const token = localStorage.getItem('token')\n    const authorization = token ? { 'authorization': `Token ${token}` } : {}\n    return fetch(\n      `/api/recipes/${recipe_id}/`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          ...authorization\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  createRecipe ({\n    name = '',\n    image,\n    tags = [],\n    cooking_time = 0,\n    text = '',\n    ingredients = []\n  }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      '/api/recipes/',\n      {\n        method: 'POST',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        },\n        body: JSON.stringify({\n          name,\n          image,\n          tags,\n          cooking_time,\n          text,\n          ingredients\n        })\n      }\n    ).then(this.checkResponse)\n  }\n\n  updateRecipe ({\n    name,\n    recipe_id,\n    image,\n    tags,\n    cooking_time,\n    text,\n    ingredients\n  }, wasImageUpdated) { // image was changed\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/${recipe_id}/`,\n      {\n        method: 'PATCH',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        },\n        body: JSON.stringify({\n          name,\n          id: recipe_id,\n          image: wasImageUpdated ? image : undefined,\n          tags,\n          cooking_time: Number(cooking_time),\n          text,\n          ingredients\n        })\n      }\n    ).then(this.checkResponse)\n  }\n\n  addToFavorites ({ id }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/${id}/favorite/`,\n      {\n        method: 'POST',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  removeFromFavorites ({ id }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/${id}/favorite/`,\n      {\n        method: 'DELETE',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  getUser ({ id }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/${id}/`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  getUsers ({\n    page = 1,\n    limit = 6\n  }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/?page=${page}&limit=${limit}`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  // subscriptions\n\n  getSubscriptions ({\n    page, \n    limit = 6,\n    recipes_limit = 3\n  }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/subscriptions/?page=${page}&limit=${limit}&recipes_limit=${recipes_limit}`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  deleteSubscriptions ({\n    author_id\n  }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/${author_id}/subscribe/`,\n      {\n        method: 'DELETE',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  subscribe ({\n    author_id\n  }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/users/${author_id}/subscribe/`,\n      {\n        method: 'POST',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  // ingredients\n  getIngredients ({ name }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/ingredients/?name=${name}`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  // tags\n  getTags () {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/tags/`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n\n  addToOrders ({ id }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/${id}/shopping_cart/`,\n      {\n        method: 'POST',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  removeFromOrders ({ id }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/${id}/shopping_cart/`,\n      {\n        method: 'DELETE',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  deleteRecipe ({ recipe_id }) {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/${recipe_id}/`,\n      {\n        method: 'DELETE',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkResponse)\n  }\n\n  downloadFile () {\n    const token = localStorage.getItem('token')\n    return fetch(\n      `/api/recipes/download_shopping_cart/`,\n      {\n        method: 'GET',\n        headers: {\n          ...this._headers,\n          'authorization': `Token ${token}`\n        }\n      }\n    ).then(this.checkFileDownloadResponse)\n  }\n}\n\nexport default new Api(process.env.API_URL || 'http://localhost', { 'content-type': 'application/json' })\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\auth-context.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\user-context.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\contexts\\recipes-context.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\footer\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\main\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\card\\index.js",["386"],[],"import styles from './style.module.css'\nimport { LinkComponent, Icons, Button, TagsContainer } from '../index'\nimport { useState, useContext } from 'react'\nimport { AuthContext } from '../../contexts'\n\nconst Card = ({\n  name = 'Без названия',\n  id,\n  image,\n  is_favorited,\n  is_in_shopping_cart,\n  tags,\n  cooking_time,\n  author = {},\n  handleLike,\n  handleAddToCart,\n  updateOrders\n}) => {\n  const authContext = useContext(AuthContext)\n  return <div className={styles.card}>\n      <LinkComponent\n        className={styles.card__title}\n        href={`/recipes/${id}`}\n        title={<div className={styles.card__image} style={{ backgroundImage: `url(${ image })` }} />}\n      />\n      <div className={styles.card__body}>\n        <LinkComponent\n          className={styles.card__title}\n          href={`/recipes/${id}`}\n          title={name}\n        />\n        <TagsContainer tags={tags} />\n        <div className={styles.card__time}>\n          <Icons.ClockIcon /> {cooking_time} мин.\n        </div>\n        <div className={styles.card__author}>\n          <Icons.UserIcon /> <LinkComponent\n            href={`/user/${author.id}`}\n            title={`${author.first_name} ${author.last_name}`}\n            className={styles.card__link}\n          />\n        </div>\n      </div>\n      \n      <div className={styles.card__footer}>\n          {authContext && <Button\n            className={styles.card__add}\n            modifier={is_in_shopping_cart ? 'style_light' : 'style_light-blue'}\n            clickHandler={_ => {\n              handleAddToCart({\n                id,\n                toAdd: Number(!is_in_shopping_cart),\n                callback: updateOrders\n              })\n            }}\n            disabled={!authContext}\n          >\n            {is_in_shopping_cart ? <><Icons.DoneIcon />Рецепт добавлен</> : <><Icons.PlusIcon fill='#4A61DD' /> Добавить в покупки</>}\n          </Button>}\n          \n          {authContext && <Button\n            modifier='style_none'\n            clickHandler={_ => {\n              handleLike({ id, toLike: Number(!is_favorited) })\n            }}\n          >\n            {is_favorited ? <Icons.StarActiveIcon /> : <Icons.StarIcon />}\n          </Button>}\n      </div>\n  </div>\n}\n\nexport default Card","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\link\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\header\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\index.js",["387"],[],"import StarIcon from './star'\nimport StarActiveIcon from './star-active'\nimport StarBigIcon from './star-big'\nimport StarBigActiveIcon from './star-big-active'\nimport ClockIcon from './clock'\nimport UserIcon from './user'\nimport CheckIcon from './check'\nimport ArrowLeftIcon from './arrow-left'\nimport ArrowRightIcon from './arrow-right'\nimport PlusIcon from './plus'\nimport DoneIcon from './done'\n\nexport default {\n  StarIcon,\n  StarActiveIcon,\n  ClockIcon,\n  UserIcon,\n  CheckIcon,\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  PlusIcon,\n  DoneIcon,\n  StarBigIcon,\n  StarBigActiveIcon\n}","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\container\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\card-list\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\form\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\button\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\title\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\protected-route\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\account-menu\\index.js",["388","389","390"],[],"import cn from 'classnames'\nimport styles from './styles.module.css'\nimport { useContext } from 'react'\nimport { Button, LinkComponent } from '../index.js'\nimport { AuthContext } from '../../contexts'\n\nconst AccountMenu = ({ onSignOut }) => {\n  const authContext = useContext(AuthContext)\n  if (!authContext) {\n    return <div className={styles.menu}>\n      <LinkComponent\n        className={styles.menuLink}\n        href='/signin'\n        title='Войти'\n      />\n      <LinkComponent\n        href='/signup'\n        title='Создать аккаунт'\n        className={styles.menuButton}\n      />\n    </div>\n  }\n  return <div className={styles.menu}>\n    <LinkComponent\n      className={styles.menuLink}\n      href='/change-password'\n      title='Изменить пароль'\n    />\n    <a\n      className={styles.menuLink}\n      onClick={onSignOut}\n    >\n      Выход\n    </a>\n  </div>\n}\n\n\nexport default AccountMenu","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\tag\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\input\\index.js",["391","392"],[],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.css'\nimport cn from 'classnames'\n\nconst Input = ({\n    onChange,\n    placeholder,\n    label,\n    disabled,\n    type = 'text',\n    inputClassName,\n    labelClassName,\n    className,\n    name,\n    required,\n    onFocus,\n    onBlur,\n    value = ''\n  }) => {\n\n  const [ inputValue, setInputValue ] = useState(value)\n  const handleValueChange = (e) => {\n    const value = e.target.value\n    setInputValue(value)\n    onChange(e)\n  }\n  useEffect(_ => {\n    if (value !== inputValue) {\n      setInputValue(value)\n    }\n  }, [value])\n\n\n  return <div className={cn(styles.input, className)}>\n    <label className={styles.inputLabel}>\n      {label && <div className={cn(styles.inputLabelText, labelClassName)}>\n        {label}\n      </div>}\n      <input\n        type={type}\n        required={required}\n        name={name}\n        className={cn(styles.inputField, inputClassName)}\n        onChange={e => {\n          handleValueChange(e)\n        }}\n        onFocus={onFocus}\n        value={inputValue}\n        onBlur={onBlur}\n      />\n    </label>\n  </div>\n}\n\nexport default Input\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\textarea\\index.js",["393","394"],[],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './styles.module.css'\nimport cn from 'classnames'\n\nconst Textarea = ({\n    onChange,\n    placeholder,\n    label,\n    disabled,\n    textareaClassName,\n    labelClassName,\n    value\n  }) => {\n\n  const [ inputValue, setInputValue ] = useState(value)\n  const handleValueChange = (e) => {\n    const value = e.target.value\n    setInputValue(value)\n    onChange(e)\n  }\n\n  useEffect(_ => {\n    if (value !== inputValue) {\n      setInputValue(value)\n    }\n  }, [value])\n\n  return <div className={styles.textarea}>\n    <label className={cn(styles.textareaLabel, labelClassName)}>\n      <div className={styles.textareaLabelText}>\n        {label}\n      </div>\n      <textarea\n        rows=\"8\"\n        value={inputValue}\n        className={cn(styles.textareaField, textareaClassName)}\n        onChange={e => {\n          handleValueChange(e)\n        }}\n      />\n    </label>\n  </div>\n}\n\nexport default Textarea\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\tags-container\\index.js",["395"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { Tag } from '../index'\n\nconst TagsContainer = ({ tags }) => {\n  if (!tags) { return null }\n  return <div className={styles['tags-container']}>\n    {tags.map(tag => {\n      return <Tag\n        key={tag.id}\n        color={tag.color}\n        name={tag.name}\n      />\n    })}\n  </div>\n}\n\nexport default TagsContainer\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\pagination\\index.js",["396","397","398","399","400"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { LinkComponent, Icons } from '../index'\nimport arrowLeft from './arrow-left.png'\nimport arrowRight from './arrow-right.png'\nimport { useState, useEffect } from 'react'\n\nconst Pagination = ({ count = 0, limit = 6, initialActive = 1, onPageChange, page }) => {\n  const [ active, setActive ] = useState(initialActive)\n  const onButtonClick = (active) => {\n    setActive(active)\n    onPageChange(active)\n  }\n  useEffect(_ => {\n    if (page === active) { return }\n    setActive(page)\n  }, [page])\n  const pagesCount = Math.ceil(count / limit)\n  if (count === 0 || pagesCount <= 1) { return null }\n  return <div className={styles.pagination}>\n    <img\n      className={cn(\n        styles.arrow,\n        styles.arrowLeft,\n        {\n          [styles.arrowDisabled]: active === 1\n        }\n      )}\n      src={arrowLeft}\n      onClick={_ => {\n        if (active === 1) { return }\n        onButtonClick(active - 1)\n      }}\n    />\n    {(new Array(pagesCount)).fill().map((item, idx) => {\n      return <div\n        className={cn(\n          styles.paginationItem, {\n            [styles.paginationItemActive]: idx + 1 === active\n          }\n        )}\n        onClick={_ => onButtonClick(idx + 1)}\n        key={idx}\n      >{idx + 1}</div>\n    })}\n    <img\n      src={arrowRight}\n      className={cn(\n        styles.arrow,\n        styles.arrowRight,\n        {\n          [styles.arrowDisabled]: active === pagesCount\n        }\n      )}\n      onClick={_ => {\n        if (active === pagesCount) { return }\n        onButtonClick(active + 1)\n      }}\n    />\n  </div>\n}\n\nexport default Pagination\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\nav\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\checkbox-group\\index.js",["401"],[],"import cn from 'classnames'\nimport styles from './styles.module.css'\nimport { useState } from 'react'\nimport { Checkbox } from '../index'\n\nconst CheckboxGroup = ({\n  onUpdated,\n  label,\n  values = [],\n  handleChange,\n  className,\n  labelClassName,\n  tagsClassName,\n  checkboxClassName\n}) => {\n  return <div className={cn(styles.checkboxGroup, className)}>\n    {label && <div className={cn(styles.label, labelClassName)}>\n      {label}\n    </div>}\n    <div className={cn(styles.checkboxGroupItems, tagsClassName)}>\n      {values.map(item => {\n        return <Checkbox\n          key={item.id}\n          id={item.id}\n          value={item.value}\n          name={item.name}\n          color={item.color}\n          onChange={handleChange}\n          className={checkboxClassName}\n        />\n      })}\n    </div>\n  </div>\n}\n\n\nexport default CheckboxGroup","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\purchase-list\\index.js",["402"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { Purchase } from '../index'\n\nconst PurchaseList = ({ orders = [], updateOrders, handleRemoveFromCart }) => {\n  return <ul className={styles.purchaseList}>\n    {orders.map(order => <Purchase\n      updateOrders={updateOrders}\n      handleRemoveFromCart={handleRemoveFromCart}\n      key={order.id}\n      {...order}\n    />)}\n  </ul>\n}\n\nexport default PurchaseList\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\purchase\\index.js",["403","404"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { LinkComponent, Icons } from '../index'\n\nconst Purchase = ({ image, name, cooking_time, id, handleRemoveFromCart, is_in_shopping_cart, updateOrders }) => {\n  if (!is_in_shopping_cart) { return null }\n  return <li className={styles.purchase}>\n    <div className={styles.purchaseContent}>\n      <div\n        alt={name}\n        className={styles.purchaseImage}\n        style={{\n          backgroundImage: `url(${image})`\n        }}\n      />\n      <h3 className={styles.purchaseTitle}>\n        <LinkComponent className={styles.recipeLink} title={name} href={`/recipes/${id}`} />\n      </h3>\n      <p className={styles.purchaseText}>\n        <Icons.ClockIcon />{cooking_time} мин.\n      </p>\n    </div>\n    <a\n      href=\"#\"\n      className={styles.purchaseDelete}\n      onClick={_ => handleRemoveFromCart({ id, toAdd: false, callback: updateOrders })}\n    >\n      Удалить\n    </a>\n  </li>\n}\n\nexport default Purchase\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\checkbox\\index.js",["405","406"],[],"import cn from 'classnames'\nimport styles from './styles.module.css'\nimport { useState } from 'react'\nimport { Icons } from '../index'\nimport { hexToRgba } from '../../utils'\n\nconst Checkbox = ({\n  onChange,\n  className,\n  color,\n  value = false,\n  name,\n  id\n}) => {\n  const clickHandler = () => {\n    onChange && onChange(id)\n  }\n  const classNames = cn(styles.checkbox, className, {\n    [styles['checkbox_active']]: value\n  })\n\n  return <div className={styles['checkbox-container']}>\n    <button\n      className={classNames}\n      onClick={clickHandler}\n      style={{ backgroundColor: value && color }}\n      type='button'\n    >\n      {value ? <Icons.CheckIcon /> : ''}\n    </button>\n    <span>{name}</span>\n  </div>\n}\n\n\nexport default Checkbox","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\subscription\\index.js",["407"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { Icons, Button, LinkComponent } from '../index'\nconst countForm = (number, titles) => {\n  number = Math.abs(number);\n  if (Number.isInteger(number)) {\n    let cases = [2, 0, 1, 1, 1, 2];  \n    return titles[ (number % 100 > 4 && number % 100 < 20) ? 2 : cases[(number%10<5)?number%10:5] ]\n  }\n  return titles[1];\n}\n\nconst Subscription = ({ email, first_name, last_name, username, removeSubscription, recipes_count, id, recipes }) => {\n  const shouldShowButton = recipes_count  > 3\n  const moreRecipes = recipes_count - 3\n  return <div className={styles.subscription}>\n    <div className={styles.subscriptionHeader}>\n      <h2 className={styles.subscriptionTitle}>\n        <LinkComponent className={styles.subscriptionRecipeLink} href={`/user/${id}`} title={`${first_name} ${last_name}`} />\n      </h2>\n    </div>\n    <div className={styles.subscriptionBody}>\n      <ul className={styles.subscriptionItems}>\n        {recipes.map(recipe => {\n          return <li className={styles.subscriptionItem} key={recipe.id}>\n            <LinkComponent className={styles.subscriptionRecipeLink} href={`/recipes/${recipe.id}`} title={\n              <div className={styles.subscriptionRecipe}>\n                <img src={recipe.image} alt={recipe.name} className={styles.subscriptionRecipeImage} />\n                <h3 className={styles.subscriptionRecipeTitle}>\n                  {recipe.name}\n                </h3>\n                <p className={styles.subscriptionRecipeText}>\n                  <Icons.ClockIcon />{recipe.cooking_time} мин.\n                </p>\n              </div>\n            } />\n          </li>\n        })}\n        {shouldShowButton && <li className={styles.subscriptionMore}>\n          <LinkComponent\n            className={styles.subscriptionLink}\n            title={`Еще ${moreRecipes} ${countForm(moreRecipes, ['рецепт', 'рецепта', 'рецептов'])}...`}\n            href={`/user/${id}`}\n          />\n        </li>}\n      </ul>\n    </div>\n    <div className={styles.subscriptionFooter}>\n      <Button\n        className={styles.subscriptionButton}\n        clickHandler={_ => {\n          removeSubscription({ id })\n        }}\n      >\n        Отписаться\n      </Button>\n    </div>\n  </div>\n}\n\nexport default Subscription\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\file-input\\index.js",["408","409"],[],"import { useState, useEffect, useRef } from 'react'\nimport styles from './styles.module.css'\nimport { Button } from '../index'\nimport cn from 'classnames'\n\nconst FileInput = ({ label, onChange, file = null, className }) => {\n  const [ currentFile, setCurrentFile ] = useState(file)\n  const fileInput = useRef(null)\n  useEffect(_ => {\n    if (file !== currentFile) {\n      setCurrentFile(file)\n    }\n  }, [file])\n\n  const getBase64 = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      setCurrentFile(reader.result)\n      onChange(reader.result)\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    }\n  }\n\n  return <div className={cn(styles.container, className)}>\n    <label className={styles.label}>\n      {label}\n    </label>\n    <input\n      className={styles.fileInput}\n      type='file'\n      ref={fileInput}\n      onChange={e => {\n        const file = e.target.files[0]\n        getBase64(file)\n      }}\n    />\n    <div\n      onClick={_ => {\n        fileInput.current.click()\n      }}\n      className={styles.button}\n      type='button'\n    >\n      Выбрать файл\n    </div>\n    {currentFile && <div className={styles.image} style={{\n      backgroundImage: `url(${currentFile})`\n    }} />}\n  </div>\n}\n\nexport default FileInput","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\subscription-list\\index.js",["410"],[],"import styles from './styles.module.css'\nimport cn from 'classnames'\nimport { Subscription } from '../index'\n\nconst SubscriptionList = ({ subscriptions, removeSubscription }) => {\n  return <div className={styles.subscriptionList}>\n    {subscriptions.map(subscription => <Subscription\n      key={subscription.id}\n      removeSubscription={removeSubscription}\n      {...subscription}\n    />)}\n  </div>\n}\n\nexport default SubscriptionList\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\ingredients-search\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\signin\\index.js",["411","412"],[],"import { Container, Input, Title, Main, Form, Button } from '../../components'\nimport styles from './styles.module.css'\nimport { useFormWithValidation } from '../../utils'\nimport { AuthContext } from '../../contexts'\nimport { Redirect } from 'react-router-dom'\nimport { useContext } from 'react'\nimport MetaTags from 'react-meta-tags'\n\nconst SignIn = ({ onSignIn }) => {\n  const { values, handleChange, errors, isValid, resetForm } = useFormWithValidation()\n  const authContext = useContext(AuthContext)\n\n  return <Main>\n    {authContext && <Redirect to='/recipes' />}\n    <Container>\n      <MetaTags>\n        <title>Войти на сайт</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Войти на сайт\" />\n        <meta property=\"og:title\" content=\"Войти на сайт\" />\n      </MetaTags>\n      <Title title='Войти на сайт' />\n      <Form\n        className={styles.form}\n        onSubmit={e => {\n          e.preventDefault()\n          onSignIn(values)\n        }}\n      >\n        <Input\n          required\n          label='Электронная почта'\n          name='email'\n          onChange={handleChange}\n        />\n        <Input\n          required\n          label='Пароль'\n          type='password'\n          name='password'\n          onChange={handleChange}\n        />\n        <Button\n          modifier='style_dark-blue'\n          disabled={!isValid}\n          type='submit'\n          className={styles.button}\n        >\n          Войти\n        </Button>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default SignIn\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\main\\index.js",["413","414"],[],"import { Card, Title, Pagination, CardList, Container, Main, CheckboxGroup  } from '../../components'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect } from 'react'\nimport api from '../../api'\nimport MetaTags from 'react-meta-tags'\n\nconst HomePage = ({ updateOrders }) => {\n  const {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    tagsValue,\n    setTagsValue,\n    handleTagsChange,\n    handleLike,\n    handleAddToCart\n  } = useRecipes()\n\n\n  const getRecipes = ({ page = 1, tags }) => {\n    api\n      .getRecipes({ page, tags })\n      .then(res => {\n        const { results, count } = res\n        setRecipes(results)\n        setRecipesCount(count)\n      })\n  }\n\n  useEffect(_ => {\n    getRecipes({ page: recipesPage, tags: tagsValue })\n  }, [recipesPage, tagsValue])\n\n  useEffect(_ => {\n    api.getTags()\n      .then(tags => {\n        setTagsValue(tags.map(tag => ({ ...tag, value: true })))\n      })\n  }, [])\n\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Рецепты</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Рецепты\" />\n        <meta property=\"og:title\" content=\"Рецепты\" />\n      </MetaTags>\n      <div className={styles.title}>\n        <Title title='Рецепты' />\n        <CheckboxGroup\n          values={tagsValue}\n          handleChange={value => {\n            setRecipesPage(1)\n            handleTagsChange(value)\n          }}\n        />\n      </div>\n      <CardList>\n        {recipes.map(card => <Card\n          {...card}\n          key={card.id}\n          updateOrders={updateOrders}\n          handleLike={handleLike}\n          handleAddToCart={handleAddToCart}\n        />)}\n      </CardList>\n      <Pagination\n        count={recipesCount}\n        limit={6}\n        page={recipesPage}\n        onPageChange={page => setRecipesPage(page)}\n      />\n    </Container>\n  </Main>\n}\n\nexport default HomePage\n\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\single-card\\index.js",["415","416","417"],[],"import { Container, Main, Button, TagsContainer, Icons, LinkComponent } from '../../components'\nimport { UserContext, AuthContext } from '../../contexts'\nimport { useContext, useState, useEffect } from 'react'\nimport styles from './styles.module.css'\nimport Ingredients from './ingredients'\nimport Description from './description'\nimport cn from 'classnames'\nimport { useRouteMatch, useParams, useHistory } from 'react-router-dom'\nimport MetaTags from 'react-meta-tags'\n\nimport { useRecipe } from '../../utils/index.js'\nimport api from '../../api'\n\nconst SingleCard = ({ loadItem, updateOrders }) => {\n  const [ loading, setLoading ] = useState(true)\n  const {\n    recipe,\n    setRecipe,\n    handleLike,\n    handleAddToCart,\n    handleSubscribe\n  } = useRecipe()\n  const authContext = useContext(AuthContext)\n  const userContext = useContext(UserContext)\n  const { id } = useParams()\n  const history = useHistory()\n\n  useEffect(_ => {\n    api.getRecipe ({\n        recipe_id: id\n      })\n      .then(res => {\n        setRecipe(res)\n        setLoading(false)\n      })\n      .catch(err => {\n        history.push('/recipes')\n      })\n  }, [])\n  \n  const { url } = useRouteMatch()\n  const {\n    author = {},\n    image,\n    tags,\n    cooking_time,\n    name,\n    ingredients,\n    text,\n    is_favorited,\n    is_in_shopping_cart\n  } = recipe\n  \n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>{name}</title>\n        <meta name=\"description\" content={`Продуктовый помощник - ${name}`} />\n        <meta property=\"og:title\" content={name} />\n      </MetaTags>\n      <div className={styles['single-card']}>\n        <img src={image} alt={name} className={styles[\"single-card__image\"]} />\n        <div className={styles[\"single-card__info\"]}>\n          <div className={styles[\"single-card__header-info\"]}>\n              <h1 className={styles[\"single-card__title\"]}>{name}</h1>\n              {authContext && <Button\n                modifier='style_none'\n                clickHandler={_ => {\n                  handleLike({ id, toLike: Number(!is_favorited) })\n                }}\n              >\n                {is_favorited ? <Icons.StarBigActiveIcon /> : <Icons.StarBigIcon />}\n              </Button>}\n          </div>\n          <TagsContainer tags={tags} />\n          <div>\n            <p className={styles['single-card__text']}><Icons.ClockIcon /> {cooking_time} мин.</p>\n            <p className={styles['single-card__text_with_link']}>\n              <div className={styles['single-card__text']}>\n                <Icons.UserIcon /> <LinkComponent\n                  title={`${author.first_name} ${author.last_name}`}\n                  href={`/user/${author.id}`}\n                  className={styles['single-card__link']}\n                />\n              </div>\n              {(userContext || {}).id === author.id && <LinkComponent\n                href={`${url}/edit`}\n                title='Редактировать рецепт'\n                className={styles['single-card__edit']}\n              />}\n            </p>\n          </div>\n          <div className={styles['single-card__buttons']}>\n            {authContext && <Button\n              className={styles['single-card__button']}\n              modifier={is_in_shopping_cart ? 'style_light' : 'style_dark-blue'}\n              clickHandler={_ => {\n                handleAddToCart({ id, toAdd: Number(!is_in_shopping_cart), callback: updateOrders })\n              }}\n            >\n              \n            {is_in_shopping_cart ? <><Icons.DoneIcon color=\"#4A61DD\"/>Рецепт добавлен</> : <><Icons.PlusIcon /> Добавить в покупки</>}\n            </Button>}\n            {(userContext || {}).id !== author.id && authContext && <Button\n              className={styles['single-card__button']}\n              modifier='style_light-blue'\n              clickHandler={_ => {\n                handleSubscribe({ author_id: author.id, toSubscribe: !author.is_subscribed })\n              }}\n            >\n              {author.is_subscribed ? 'Отписаться от автора' : 'Подписаться на автора'}\n            </Button>}\n          </div>\n          <Ingredients ingredients={ingredients} />\n          <Description description={text} />\n        </div>\n    </div>\n    </Container>\n  </Main>\n}\n\nexport default SingleCard\n\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\signup\\index.js",["418","419"],[],"import { Container, Input, Title, Main, Form, Button } from '../../components'\nimport styles from './styles.module.css'\nimport { useFormWithValidation } from '../../utils'\nimport { Redirect } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { AuthContext } from '../../contexts'\nimport MetaTags from 'react-meta-tags'\n\nconst SignUp = ({ onSignUp }) => {\n  const { values, handleChange, errors, isValid, resetForm } = useFormWithValidation()\n  const authContext = useContext(AuthContext)\n\n  return <Main>\n    {authContext && <Redirect to='/recipes' />}\n    <Container>\n      <MetaTags>\n        <title>Регистрация</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Регистрация\" />\n        <meta property=\"og:title\" content=\"Регистрация\" />\n      </MetaTags>\n      <Title title='Регистрация' />\n      <Form className={styles.form} onSubmit={e => {\n        e.preventDefault()\n        onSignUp(values)\n      }}>\n        <Input\n          label='Имя'\n          name='first_name'\n          required\n          onChange={handleChange}\n        />\n        <Input\n          label='Фамилия'\n          name='last_name'\n          required\n          onChange={handleChange}\n        />\n        <Input\n          label='Имя пользователя'\n          name='username'\n          required\n          onChange={handleChange}\n        />\n\n        <Input\n          label='Адрес электронной почты'\n          name='email'\n          required\n          onChange={handleChange}\n        />\n        <Input\n          label='Пароль'\n          type='password'\n          name='password'\n          required\n          onChange={handleChange}\n        />\n        <Button\n          modifier='style_dark-blue'\n          type='submit'\n          className={styles.button}\n          disabled={!isValid}\n        >\n          Создать аккаунт\n        </Button>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default SignUp\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\cart\\index.js",["420","421"],[],"import { PurchaseList, Title, Container, Main, Button } from '../../components'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect, useState } from 'react'\nimport api from '../../api'\nimport MetaTags from 'react-meta-tags'\n\nconst Cart = ({ updateOrders, orders }) => {\n  const {\n    recipes,\n    setRecipes,\n    handleAddToCart\n  } = useRecipes()\n  \n  const getRecipes = () => {\n    api\n      .getRecipes({\n        page: 1,\n        limit: 999,\n        is_in_shopping_cart: Number(true)\n      })\n      .then(res => {\n        const { results } = res\n        setRecipes(results)\n      })\n  }\n\n  useEffect(_ => {\n    getRecipes()\n  }, [])\n\n  const downloadDocument = () => {\n    api.downloadFile()\n  }\n\n  return <Main>\n    <Container className={styles.container}>\n      <MetaTags>\n        <title>Список покупок</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Список покупок\" />\n        <meta property=\"og:title\" content=\"Список покупок\" />\n      </MetaTags>\n      <div className={styles.cart}>\n        <Title title='Список покупок' />\n        <PurchaseList\n          orders={recipes}\n          handleRemoveFromCart={handleAddToCart}\n          updateOrders={updateOrders}\n        />\n        {orders > 0 && <Button\n          modifier='style_dark-blue'\n          clickHandler={downloadDocument}\n        >Скачать список</Button>}\n      </div>\n    </Container>\n  </Main>\n}\n\nexport default Cart\n\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\favorites\\index.js",["422","423"],[],"import { Card, Title, Pagination, CardList, Container, Main, CheckboxGroup  } from '../../components'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect } from 'react'\nimport api from '../../api'\nimport MetaTags from 'react-meta-tags'\n\nconst Favorites = ({ updateOrders }) => {\n  const {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    tagsValue,\n    handleTagsChange,\n    setTagsValue,\n    handleLike,\n    handleAddToCart\n  } = useRecipes()\n  \n  const getRecipes = ({ page = 1, tags }) => {\n    api\n      .getRecipes({ page, is_favorited: Number(true), tags })\n      .then(res => {\n        const { results, count } = res\n        setRecipes(results)\n        setRecipesCount(count)\n      })\n  }\n\n  useEffect(_ => {\n    getRecipes({ page: recipesPage, tags: tagsValue })\n  }, [recipesPage, tagsValue])\n\n  useEffect(_ => {\n    api.getTags()\n      .then(tags => {\n        setTagsValue(tags.map(tag => ({ ...tag, value: true })))\n      })\n  }, [])\n\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Избранное</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Избранное\" />\n        <meta property=\"og:title\" content=\"Избранное\" />\n      </MetaTags>\n      <div className={styles.title}>\n        <Title title='Избранное' />\n        <CheckboxGroup\n          values={tagsValue}\n          handleChange={value => {\n            setRecipesPage(1)\n            handleTagsChange(value)\n          }}\n        />\n      </div>\n      <CardList>\n        {recipes.map(card => <Card\n          {...card}\n          key={card.id}\n          updateOrders={updateOrders}\n          handleLike={handleLike}\n          handleAddToCart={handleAddToCart}\n        />)}\n      </CardList>\n      <Pagination\n        count={recipesCount}\n        limit={6}\n        page={recipesPage}\n        onPageChange={page => setRecipesPage(page)}\n      />\n    </Container>\n  </Main>\n}\n\nexport default Favorites\n\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\subscriptions\\index.js",["424"],[],"import { Title, Pagination, Container, Main, SubscriptionList  } from '../../components'\nimport { useSubscriptions } from '../../utils'\nimport api from '../../api'\nimport { useEffect } from 'react'\nimport MetaTags from 'react-meta-tags'\n\nconst SubscriptionsPage = () => {\n  const {\n    subscriptions,\n    setSubscriptions,\n    subscriptionsCount,\n    setSubscriptionsCount,\n    removeSubscription,\n    subscriptionsPage,\n    setSubscriptionsPage\n  } = useSubscriptions()\n\n  const getSubscriptions = ({ page }) => {\n    api\n      .getSubscriptions({ page })\n      .then(res => {\n        setSubscriptions(res.results)\n        setSubscriptionsCount(res.count)\n      })\n  }\n\n  useEffect(_ => {\n    getSubscriptions({ page: subscriptionsPage })\n  }, [subscriptionsPage])\n\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Мои подписки</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Мои подписки\" />\n        <meta property=\"og:title\" content=\"Мои подписки\" />\n      </MetaTags>\n      <Title\n        title='Мои подписки'\n      />\n      <SubscriptionList\n        subscriptions={subscriptions}\n        removeSubscription={removeSubscription}\n      />\n      <Pagination\n        count={subscriptionsCount}\n        limit={6}\n        onPageChange={page => {\n          setSubscriptionsPage(page)\n        }}\n      />\n    </Container>\n  </Main>\n}\n\nexport default SubscriptionsPage","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\recipe-edit\\index.js",["425","426","427"],[],"import { Container, IngredientsSearch, FileInput, Input, Title, CheckboxGroup, Main, Form, Button, Checkbox, Textarea } from '../../components'\nimport styles from './styles.module.css'\nimport api from '../../api'\nimport { useEffect, useState } from 'react'\nimport { useTags } from '../../utils'\nimport { useParams, useHistory } from 'react-router-dom'\nimport MetaTags from 'react-meta-tags'\n\nconst RecipeEdit = ({ onItemDelete }) => {\n  const { value, handleChange, setValue } = useTags()\n  const [ recipeName, setRecipeName ] = useState('')\n\n  const [ ingredientValue, setIngredientValue ] = useState({\n    name: '',\n    id: null,\n    amount: '',\n    measurement_unit: ''\n  })\n\n  const [ recipeIngredients, setRecipeIngredients ] = useState([])\n  const [ recipeText, setRecipeText ] = useState('')\n  const [ recipeTime, setRecipeTime ] = useState(0)\n  const [ recipeFile, setRecipeFile ] = useState(null)\n  const [\n    recipeFileWasManuallyChanged,\n    setRecipeFileWasManuallyChanged\n  ] = useState(false)\n\n  const [ ingredients, setIngredients ] = useState([])\n  const [ showIngredients, setShowIngredients ] = useState(false)\n  const [ loading, setLoading ] = useState(true)\n  const history = useHistory()\n\n  useEffect(_ => {\n    if (ingredientValue.name === '') {\n      return setIngredients([])\n    }\n    api\n      .getIngredients({ name: ingredientValue.name })\n      .then(ingredients => {\n        setIngredients(ingredients)\n      })\n  }, [ingredientValue.name])\n\n  useEffect(_ => {\n    api.getTags()\n      .then(tags => {\n        setValue(tags.map(tag => ({ ...tag, value: true })))\n      })\n  }, [])\n\n  const { id } = useParams()\n  useEffect(_ => {\n    if (value.length === 0 || !loading) { return }\n    api.getRecipe ({\n      recipe_id: id\n    }).then(res => {\n      const {\n        image,\n        tags,\n        cooking_time,\n        name,\n        ingredients,\n        text\n      } = res\n      setRecipeText(text)\n      setRecipeName(name)\n      setRecipeTime(cooking_time)\n      setRecipeFile(image)\n      setRecipeIngredients(ingredients)\n\n\n      const tagsValueUpdated = value.map(item => {\n        item.value = Boolean(tags.find(tag => tag.id === item.id))\n        return item\n      })\n      setValue(tagsValueUpdated)\n      setLoading(false)\n    })\n    .catch(err => {\n      history.push('/recipes')\n    })\n  }, [value])\n\n  const handleIngredientAutofill = ({ id, name, measurement_unit }) => {\n    setIngredientValue({\n      ...ingredientValue,\n      id,\n      name,\n      measurement_unit\n    })\n  }\n\n  const checkIfDisabled = () => {\n    return recipeText === '' ||\n    recipeName === '' ||\n    recipeIngredients.length === 0 ||\n    value.filter(item => item.value).length === 0 ||\n    recipeTime === '' ||\n    recipeFile === '' ||\n    recipeFile === null\n  }\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Редактирование рецепта</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Редактирование рецепта\" />\n        <meta property=\"og:title\" content=\"Редактирование рецепта\" />\n      </MetaTags>\n      <Title title='Редактирование рецепта' />\n      <Form\n        className={styles.form}\n        onSubmit={e => {\n          e.preventDefault()\n          const data = {\n            text: recipeText,\n            name: recipeName,\n            ingredients: recipeIngredients.map(item => ({\n              id: item.id,\n              amount: item.amount\n            })),\n            tags: value.filter(item => item.value).map(item => item.id),\n            cooking_time: recipeTime,\n            image: recipeFile,\n            recipe_id: id\n          }\n          api\n            .updateRecipe(data, recipeFileWasManuallyChanged)\n            .then(res => {\n              history.push(`/recipes/${id}`)\n            })\n            .catch(err => {\n              const { non_field_errors, ingredients, cooking_time } = err\n              console.log({  ingredients })\n              if (non_field_errors) {\n                return alert(non_field_errors.join(', '))\n              }\n              if (ingredients) {\n                return alert(`Ингредиенты: ${ingredients.filter(item => Object.keys(item).length).map(item => {\n                  const error = item[Object.keys(item)[0]]\n                  return error && error.join(' ,')\n                })[0]}`)\n              }\n              if (cooking_time) {\n                return alert(`Время готовки: ${cooking_time[0]}`)\n              }\n              const errors = Object.values(err)\n              if (errors) {\n                alert(errors.join(', '))\n              }\n            })\n        }}\n      >\n        <Input\n          label='Название рецепта'\n          onChange={e => {\n            const value = e.target.value\n            setRecipeName(value)\n          }}\n          value={recipeName}\n        />\n        <CheckboxGroup\n          label='Теги'\n          values={value}\n          className={styles.checkboxGroup}\n          labelClassName={styles.checkboxGroupLabel}\n          tagsClassName={styles.checkboxGroupTags}\n          checkboxClassName={styles.checkboxGroupItem}\n          handleChange={handleChange}\n        />\n        <div className={styles.ingredients}>\n          <div className={styles.ingredientsInputs}>\n            <Input\n              label='Ингредиенты'\n              className={styles.ingredientsNameInput}\n              inputClassName={styles.ingredientsInput}\n              labelClassName={styles.ingredientsLabel}\n              onChange={e => {\n                const value = e.target.value\n                setIngredientValue({\n                  ...ingredientValue,\n                  name: value\n                })\n              }}\n              onFocus={_ => {\n                setShowIngredients(true)\n              }}\n              value={ingredientValue.name}\n            />\n            <div className={styles.ingredientsAmountInputContainer}>\n              <Input\n                className={styles.ingredientsAmountInput}\n                inputClassName={styles.ingredientsAmountValue}\n                onChange={e => {\n                  const value = e.target.value\n                  setIngredientValue({\n                    ...ingredientValue,\n                    amount: value\n                  })\n                }}\n                value={ingredientValue.amount}\n              />\n              {ingredientValue.measurement_unit !== '' && <div className={styles.measurementUnit}>{ingredientValue.measurement_unit}</div>}\n            </div>\n            {showIngredients && ingredients.length > 0 && <IngredientsSearch\n              ingredients={ingredients}\n              onClick={({ id, name, measurement_unit }) => {\n                handleIngredientAutofill({ id, name, measurement_unit })\n                setIngredients([])\n                setShowIngredients(false)\n              }}\n            />}\n          </div>\n          <div className={styles.ingredientsAdded}>\n            {recipeIngredients.map(item => {\n              return <div\n                className={styles.ingredientsAddedItem}\n              >\n                <span className={styles.ingredientsAddedItemTitle}>{item.name}</span> <span>-</span> <span>{item.amount}{item.measurement_unit}</span> <span\n                  className={styles.ingredientsAddedItemRemove}\n                  onClick={_ => {\n                    const recipeIngredientsUpdated = recipeIngredients.filter(ingredient => {\n                      return ingredient.id !== item.id\n                    })\n                    setRecipeIngredients(recipeIngredientsUpdated)\n                  }}\n                >Удалить</span>\n              </div>\n            })}\n          </div>\n          <div\n            className={styles.ingredientAdd}\n            onClick={_ => {\n              if (ingredientValue.amount === '' || ingredientValue.name === '') { return }\n              setRecipeIngredients([...recipeIngredients, ingredientValue])\n              setIngredientValue({\n                name: '',\n                id: null,\n                amount: '',\n                measurement_unit: ''\n              })\n            }}\n          >\n            Добавить ингредиент\n          </div>\n        </div>\n        <div className={styles.cookingTime}>\n          <Input\n            label='Время приготовления'\n            className={styles.ingredientsTimeInput}\n            labelClassName={styles.cookingTimeLabel}\n            inputClassName={styles.ingredientsTimeValue}\n            onChange={e => {\n              const value = e.target.value\n              setRecipeTime(value)\n            }}\n            value={recipeTime}\n          />\n          <div className={styles.cookingTimeUnit}>мин.</div>\n        </div>\n        <Textarea\n          label='Описание рецепта'\n          onChange={e => {\n            const value = e.target.value\n            setRecipeText(value)\n          }}\n          value={recipeText}\n        />\n        <FileInput\n          onChange={file => {\n            setRecipeFileWasManuallyChanged(true)\n            setRecipeFile(file)\n          }}\n          className={styles.fileInput}\n          label='Загрузить фото'\n          file={recipeFile}\n        />\n        <div className={styles.actions}>\n          <Button\n            modifier='style_dark-blue'\n            disabled={checkIfDisabled()}\n            className={styles.button}\n          >\n            Редактировать рецепт\n          </Button>\n          <div\n            className={styles.deleteRecipe}\n            onClick={_ => {\n              api.deleteRecipe({ recipe_id: id })\n                .then(res => {\n                  onItemDelete && onItemDelete()\n                  history.push('/recipes')\n                })\n            }}\n          >\n            Удалить\n          </div>\n        </div>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default RecipeEdit\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\change-password\\index.js",["428","429","430","431"],[],"import { Container, Input, Title, Main, Form, Button } from '../../components'\nimport styles from './styles.module.css'\nimport { useFormWithValidation } from '../../utils'\nimport { AuthContext } from '../../contexts'\nimport { Redirect } from 'react-router-dom'\nimport { useContext } from 'react'\nimport MetaTags from 'react-meta-tags'\n\nconst ChangePassword = ({ onPasswordChange }) => {\n  const { values, handleChange, errors, isValid, resetForm } = useFormWithValidation()\n  const authContext = useContext(AuthContext)\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Изменить пароль</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Изменить пароль\" />\n        <meta property=\"og:title\" content=\"Изменить пароль\" />\n      </MetaTags>\n      <Title title='Изменить пароль' />\n      <Form\n        className={styles.form}\n        onSubmit={e => {\n          e.preventDefault()\n          onPasswordChange(values)\n        }}\n      >\n        <Input\n          required\n          label='Старый пароль'\n          type='password'\n          name='current_password'\n          onChange={handleChange}\n        />\n        <Input\n          required\n          label='Новый пароль'\n          type='password'\n          name='new_password'\n          onChange={handleChange}\n        />\n        <Input\n          required\n          label='Подтверждение нового пароля'\n          type='password'\n          name='repeat_password'\n          onChange={handleChange}\n        />\n        <Button\n          modifier='style_dark-blue'\n          type='submit'\n          disabled={!isValid || values.new_password !== values.repeat_password}\n        >\n          Изменить пароль\n        </Button>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default ChangePassword\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\user\\index.js",["432","433","434"],[],"import {\n  Card,\n  Title,\n  Pagination,\n  CardList,\n  Button,\n  CheckboxGroup,\n  Container,\n  Main \n} from '../../components'\nimport cn from 'classnames'\nimport styles from './styles.module.css'\nimport { useRecipes } from '../../utils/index.js'\nimport { useEffect, useState, useContext } from 'react'\nimport api from '../../api'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { UserContext } from '../../contexts'\nimport MetaTags from 'react-meta-tags'\n\nconst UserPage = ({ updateOrders }) => {\n  const {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    tagsValue,\n    setTagsValue,\n    handleTagsChange,\n    handleLike,\n    handleAddToCart\n  } = useRecipes()\n  const { id } = useParams()\n  const [ user, setUser ] = useState(null)\n  const [ subscribed, setSubscribed ] = useState(false)\n  const history = useHistory()\n  const userContext = useContext(UserContext)\n\n  const getRecipes = ({ page = 1, tags }) => {\n    api\n      .getRecipes({ page, author: id, tags })\n        .then(res => {\n          const { results, count } = res\n          setRecipes(results)\n          setRecipesCount(count)\n        })\n  }\n\n  const getUser = () => {\n    api.getUser({ id })\n      .then(res => {\n        setUser(res)\n        setSubscribed(res.is_subscribed)\n      })\n      .catch(err => {\n        history.push('/recipes')\n      })\n  }\n\n  useEffect(_ => {\n    if (!user) { return }\n    getRecipes({ page: recipesPage, tags: tagsValue, author: user.id })\n  }, [ recipesPage, tagsValue, user ])\n\n  useEffect(_ => {\n    getUser()\n  }, [])\n\n  useEffect(_ => {\n    api.getTags()\n      .then(tags => {\n        setTagsValue(tags.map(tag => ({ ...tag, value: true })))\n      })\n  }, [])\n\n\n  return <Main>\n    <Container className={styles.container}>\n      <MetaTags>\n        <title>{user ? `${user.first_name} ${user.last_name}` : 'Страница пользователя'}</title>\n        <meta name=\"description\" content={user ? `Продуктовый помощник - ${user.first_name} ${user.last_name}` : 'Продуктовый помощник - Страница пользователя'} />\n        <meta property=\"og:title\" content={user ? `${user.first_name} ${user.last_name}` : 'Страница пользователя'} />\n      </MetaTags>\n      <div className={styles.title}>\n        <Title\n          className={cn({\n            [styles.titleText]: (userContext || {}).id !== (user || {}).id\n          })}\n          title={user ? `${user.first_name} ${user.last_name}` : ''}\n        />\n        <CheckboxGroup\n          values={tagsValue}\n          handleChange={value => {\n            setRecipesPage(1)\n            handleTagsChange(value)\n          }}\n        />\n      </div>\n      {(userContext || {}).id !== (user || {}).id && <Button\n        className={styles.buttonSubscribe}\n        clickHandler={_ => {\n          const method = subscribed ? api.deleteSubscriptions.bind(api) : api.subscribe.bind(api) \n            method({\n              author_id: id\n            })\n            .then(_ => {\n              setSubscribed(!subscribed)\n            })\n        }}\n      >\n        {subscribed ? 'Отписаться от автора' : 'Подписаться на автора'}\n      </Button>}\n      <CardList>\n        {recipes.map(card => <Card\n          {...card}\n          key={card.id}\n          updateOrders={updateOrders}\n          handleLike={handleLike}\n          handleAddToCart={handleAddToCart}\n        />)}\n      </CardList>\n      <Pagination\n        count={recipesCount}\n        limit={6}\n        page={recipesPage}\n        onPageChange={page => setRecipesPage(page)}\n      />\n    </Container>\n  </Main>\n}\n\nexport default UserPage\n\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\recipe-create\\index.js",["435","436"],[],"import { Container, IngredientsSearch, FileInput, Input, Title, CheckboxGroup, Main, Form, Button, Checkbox, Textarea } from '../../components'\nimport styles from './styles.module.css'\nimport api from '../../api'\nimport { useEffect, useState } from 'react'\nimport { useTags } from '../../utils'\nimport { useHistory } from 'react-router-dom'\nimport MetaTags from 'react-meta-tags'\n\nconst RecipeCreate = ({ onEdit }) => {\n  const { value, handleChange, setValue } = useTags()\n  const [ recipeName, setRecipeName ] = useState('')\n  const history = useHistory()\n  const [ ingredientValue, setIngredientValue ] = useState({\n    name: '',\n    id: null,\n    amount: '',\n    measurement_unit: ''\n  })\n  const [ recipeIngredients, setRecipeIngredients ] = useState([])\n  const [ recipeText, setRecipeText ] = useState('')\n  const [ recipeTime, setRecipeTime ] = useState('')\n  const [ recipeFile, setRecipeFile ] = useState(null)\n\n  const [ ingredients, setIngredients ] = useState([])\n  const [ showIngredients, setShowIngredients ] = useState(false)\n  useEffect(_ => {\n    if (ingredientValue.name === '') {\n      return setIngredients([])\n    }\n    api\n      .getIngredients({ name: ingredientValue.name })\n      .then(ingredients => {\n        setIngredients(ingredients)\n      })\n  }, [ingredientValue.name])\n\n  useEffect(_ => {\n    api.getTags()\n      .then(tags => {\n        setValue(tags.map(tag => ({ ...tag, value: true })))\n      })\n  }, [])\n\n  const handleIngredientAutofill = ({ id, name, measurement_unit }) => {\n    setIngredientValue({\n      ...ingredientValue,\n      id,\n      name,\n      measurement_unit\n    })\n  }\n\n  const checkIfDisabled = () => {\n    return recipeText === '' ||\n    recipeName === '' ||\n    recipeIngredients.length === 0 ||\n    value.filter(item => item.value).length === 0 ||\n    recipeTime === '' ||\n    recipeFile === '' ||\n    recipeFile === null\n  }\n\n  return <Main>\n    <Container>\n      <MetaTags>\n        <title>Создание рецепта</title>\n        <meta name=\"description\" content=\"Продуктовый помощник - Создание рецепта\" />\n        <meta property=\"og:title\" content=\"Создание рецепта\" />\n      </MetaTags>\n      <Title title='Создание рецепта' />\n      <Form\n        className={styles.form}\n        onSubmit={e => {\n          e.preventDefault()\n          const data = {\n            text: recipeText,\n            name: recipeName,\n            ingredients: recipeIngredients.map(item => ({\n              id: item.id,\n              amount: item.amount\n            })),\n            tags: value.filter(item => item.value).map(item => item.id),\n            cooking_time: recipeTime,\n            image: recipeFile\n          }\n          api\n          .createRecipe(data)\n          .then(res => {\n            history.push(`/recipes/${res.id}`)\n          })\n          .catch(err => {\n            const { non_field_errors, ingredients, cooking_time } = err\n            if (non_field_errors) {\n              return alert(non_field_errors.join(', '))\n            }\n            if (ingredients) {\n              return alert(`Ингредиенты: ${ingredients.filter(item => Object.keys(item).length).map(item => {\n                const error = item[Object.keys(item)[0]]\n                return error && error.join(' ,')\n              })[0]}`)\n            }\n            if (cooking_time) {\n              return alert(`Время готовки: ${cooking_time[0]}`)\n            }\n            const errors = Object.values(err)\n            if (errors) {\n              alert(errors.join(', '))\n            }\n          })\n        }}\n      >\n        <Input\n          label='Название рецепта'\n          onChange={e => {\n            const value = e.target.value\n            setRecipeName(value)\n          }}\n        />\n        <CheckboxGroup\n          label='Теги'\n          values={value}\n          className={styles.checkboxGroup}\n          labelClassName={styles.checkboxGroupLabel}\n          tagsClassName={styles.checkboxGroupTags}\n          checkboxClassName={styles.checkboxGroupItem}\n          handleChange={handleChange}\n        />\n        <div className={styles.ingredients}>\n          <div className={styles.ingredientsInputs}>\n            <Input\n              label='Ингредиенты'\n              className={styles.ingredientsNameInput}\n              inputClassName={styles.ingredientsInput}\n              labelClassName={styles.ingredientsLabel}\n              onChange={e => {\n                const value = e.target.value\n                setIngredientValue({\n                  ...ingredientValue,\n                  name: value\n                })\n              }}\n              onFocus={_ => {\n                setShowIngredients(true)\n              }}\n              value={ingredientValue.name}\n            />\n            <div className={styles.ingredientsAmountInputContainer}>\n              <Input\n                className={styles.ingredientsAmountInput}\n                inputClassName={styles.ingredientsAmountValue}\n                onChange={e => {\n                  const value = e.target.value\n                  setIngredientValue({\n                    ...ingredientValue,\n                    amount: value\n                  })\n                }}\n                value={ingredientValue.amount}\n              />\n              {ingredientValue.measurement_unit !== '' && <div className={styles.measurementUnit}>{ingredientValue.measurement_unit}</div>}\n            </div>\n            {showIngredients && ingredients.length > 0 && <IngredientsSearch\n              ingredients={ingredients}\n              onClick={({ id, name, measurement_unit }) => {\n                handleIngredientAutofill({ id, name, measurement_unit })\n                setIngredients([])\n                setShowIngredients(false)\n              }}\n            />}\n\n          </div>\n          <div className={styles.ingredientsAdded}>\n            {recipeIngredients.map(item => {\n              return <div\n                className={styles.ingredientsAddedItem}\n              >\n                <span className={styles.ingredientsAddedItemTitle}>{item.name}</span> <span>-</span> <span>{item.amount}{item.measurement_unit}</span> <span\n                  className={styles.ingredientsAddedItemRemove}\n                  onClick={_ => {\n                    const recipeIngredientsUpdated = recipeIngredients.filter(ingredient => {\n                      return ingredient.id !== item.id\n                    })\n                    setRecipeIngredients(recipeIngredientsUpdated)\n                  }}\n                >Удалить</span>\n              </div>\n            })}\n          </div>\n          <div\n            className={styles.ingredientAdd}\n            onClick={_ => {\n              if (ingredientValue.amount === '' || ingredientValue.name === '' || !ingredientValue.id) { return }\n              setRecipeIngredients([...recipeIngredients, ingredientValue])\n              setIngredientValue({\n                name: '',\n                id: null,\n                amount: '',\n                measurement_unit: ''\n              })\n            }}\n          >\n            Добавить ингредиент\n          </div>\n        </div>\n        <div className={styles.cookingTime}>\n          <Input\n            label='Время приготовления'\n            className={styles.ingredientsTimeInput}\n            labelClassName={styles.cookingTimeLabel}\n            inputClassName={styles.ingredientsTimeValue}\n            onChange={e => {\n              const value = e.target.value\n              setRecipeTime(value)\n            }}\n            value={recipeTime}\n          />\n          <div className={styles.cookingTimeUnit}>мин.</div>\n        </div>\n        <Textarea\n          label='Описание рецепта'\n          onChange={e => {\n            const value = e.target.value\n            setRecipeText(value)\n          }}\n        />\n        <FileInput\n          onChange={file => {\n            setRecipeFile(file)\n          }}\n          className={styles.fileInput}\n          label='Загрузить фото'\n        />\n        <Button\n          modifier='style_dark-blue'\n          disabled={checkIfDisabled()}\n          className={styles.button}\n        >\n          Создать рецепт\n        </Button>\n      </Form>\n    </Container>\n  </Main>\n}\n\nexport default RecipeCreate\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star-active\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\configs\\navigation.js",["437"],[],"export default [\n  {\n    title: 'Рецепты',\n    href: '/recipes',\n    auth: false\n  },{\n    title: 'Мои подписки',\n    href: '/subscriptions',\n    auth: true\n  },{\n    title: 'Создать рецепт',\n    href: '/recipes/create',\n    auth: true\n  },{\n    title: 'Избранное',\n    href: '/favorites',\n    auth: true\n  }, {\n    title: 'Список покупок',\n    href: '/cart',\n    auth: true\n  }\n]","C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star-big\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\arrow-left\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\star-big-active\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\done\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\user\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\check\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\clock\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\plus\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\components\\icons\\arrow-right\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\single-card\\description\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\pages\\single-card\\ingredients\\index.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\hex-to-rgba.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-tags.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-recipe.js",["438"],[],"import React, { useState } from \"react\";\nimport api from '../api'\n\nexport default function useRecipe () {\n  const [ recipe, setRecipe ] = useState({})\n\n  const handleLike = ({ id, toLike = 1 }) => {\n    const method = toLike ? api.addToFavorites.bind(api) : api.removeFromFavorites.bind(api)\n    method({ id }).then(res => {\n      const recipeUpdated = { ...recipe, is_favorited: Number(toLike) }\n      setRecipe(recipeUpdated)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  const handleAddToCart = ({ id, toAdd = 1, callback }) => {\n    const method = toAdd ? api.addToOrders.bind(api) : api.removeFromOrders.bind(api)\n    method({ id }).then(res => {\n      const recipeUpdated = { ...recipe, is_in_shopping_cart: Number(toAdd) }\n      setRecipe(recipeUpdated)\n      callback && callback(toAdd)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  const handleSubscribe = ({ author_id, toSubscribe = 1 }) => {\n    const method = toSubscribe ? api.subscribe.bind(api) : api.deleteSubscriptions.bind(api)\n      method({\n        author_id\n      })\n      .then(_ => {\n        const recipeUpdated = { ...recipe, author: { ...recipe.author, is_subscribed: toSubscribe } }\n        setRecipe(recipeUpdated)\n      })\n      .catch(err => {\n        const { errors } = err\n        if (errors) {\n          alert(errors)\n        }\n      })\n  }\n\n  return {\n    recipe,\n    setRecipe,\n    handleLike,\n    handleAddToCart,\n    handleSubscribe\n  }\n}\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\validation.js",[],[],"C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-recipes.js",["439"],[],"import React, { useState } from \"react\";\nimport { useTags } from './index.js'\nimport api from '../api'\n\nexport default function useRecipes () {\n  const [ recipes, setRecipes ] = useState([])\n  const [ recipesCount, setRecipesCount ] = useState(0)\n  const [ recipesPage, setRecipesPage ] = useState(1)\n  const { value: tagsValue, handleChange: handleTagsChange, setValue: setTagsValue } = useTags()\n\n  const handleLike = ({ id, toLike = true }) => {\n    const method = toLike ? api.addToFavorites.bind(api) : api.removeFromFavorites.bind(api)\n    method({ id }).then(res => {\n      const recipesUpdated = recipes.map(recipe => {\n        if (recipe.id === id) {\n          recipe.is_favorited = toLike\n        }\n        return recipe\n      })\n      setRecipes(recipesUpdated)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  const handleAddToCart = ({ id, toAdd = true, callback }) => {\n    const method = toAdd ? api.addToOrders.bind(api) : api.removeFromOrders.bind(api)\n    method({ id }).then(res => {\n      const recipesUpdated = recipes.map(recipe => {\n        if (recipe.id === id) {\n          recipe.is_in_shopping_cart = toAdd\n        }\n        return recipe\n      })\n      setRecipes(recipesUpdated)\n      callback && callback(toAdd)\n    })\n    .catch(err => {\n      const { errors } = err\n      if (errors) {\n        alert(errors)\n      }\n    })\n  }\n\n  return {\n    recipes,\n    setRecipes,\n    recipesCount,\n    setRecipesCount,\n    recipesPage,\n    setRecipesPage,\n    tagsValue,\n    handleLike,\n    handleAddToCart,\n    handleTagsChange,\n    setTagsValue\n  }\n}\n","C:\\Dev\\foodgram-project-react\\frontend\\src\\utils\\use-subscriptions.js",["440","441"],[],"import React, { useState } from \"react\";\nimport { useTags } from './index.js'\nimport api from '../api'\n\nexport default function useRecipes () {\n  const [ subscriptions, setSubscriptions ] = useState([])\n  const [ subscriptionsPage, setSubscriptionsPage ] = useState(1)\n  const [ subscriptionsCount, setSubscriptionsCount ] = useState(0)\n\n  const removeSubscription = ({ id }) => {\n    api\n      .deleteSubscriptions({ author_id: id })\n      .then(res => {\n        const subscriptionsUpdated = subscriptions.filter(item => {\n          return item.id !== id\n        })\n        setSubscriptions(subscriptionsUpdated)\n        setSubscriptionsCount(subscriptionsCount - 1)\n      })\n      .catch(err => {\n        const { errors } = err\n        if (errors) {\n          alert(errors)\n        }\n      })\n  }\n  \n  return {\n    subscriptions,\n    setSubscriptions,\n    subscriptionsPage,\n    setSubscriptionsPage,\n    removeSubscription,\n    subscriptionsCount,\n    setSubscriptionsCount\n  }\n}\n",{"ruleId":"442","severity":1,"message":"443","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":12},{"ruleId":"442","severity":1,"message":"446","line":30,"column":11,"nodeType":"444","messageId":"445","endLine":30,"endColumn":18},{"ruleId":"442","severity":1,"message":"447","line":30,"column":20,"nodeType":"444","messageId":"445","endLine":30,"endColumn":30},{"ruleId":"442","severity":1,"message":"448","line":33,"column":9,"nodeType":"444","messageId":"445","endLine":33,"endColumn":17},{"ruleId":"449","severity":1,"message":"450","line":166,"column":6,"nodeType":"451","endLine":166,"endColumn":8,"suggestions":"452"},{"ruleId":"453","severity":1,"message":"454","line":181,"column":11,"nodeType":"455","endLine":181,"endColumn":37},{"ruleId":"442","severity":1,"message":"456","line":319,"column":11,"nodeType":"444","messageId":"445","endLine":319,"endColumn":16},{"ruleId":"442","severity":1,"message":"456","line":333,"column":11,"nodeType":"444","messageId":"445","endLine":333,"endColumn":16},{"ruleId":"442","severity":1,"message":"457","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":18},{"ruleId":"458","severity":1,"message":"459","line":13,"column":1,"nodeType":"460","endLine":25,"endColumn":2},{"ruleId":"442","severity":1,"message":"461","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":10},{"ruleId":"442","severity":1,"message":"462","line":4,"column":10,"nodeType":"444","messageId":"445","endLine":4,"endColumn":16},{"ruleId":"463","severity":1,"message":"464","line":29,"column":5,"nodeType":"455","endLine":32,"endColumn":6},{"ruleId":"442","severity":1,"message":"465","line":2,"column":10,"nodeType":"444","messageId":"445","endLine":2,"endColumn":14},{"ruleId":"449","severity":1,"message":"466","line":32,"column":6,"nodeType":"451","endLine":32,"endColumn":13,"suggestions":"467"},{"ruleId":"442","severity":1,"message":"465","line":2,"column":10,"nodeType":"444","messageId":"445","endLine":2,"endColumn":14},{"ruleId":"449","severity":1,"message":"466","line":27,"column":6,"nodeType":"451","endLine":27,"endColumn":13,"suggestions":"468"},{"ruleId":"442","severity":1,"message":"461","line":2,"column":8,"nodeType":"444","messageId":"445","endLine":2,"endColumn":10},{"ruleId":"442","severity":1,"message":"469","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":23},{"ruleId":"442","severity":1,"message":"470","line":3,"column":25,"nodeType":"444","messageId":"445","endLine":3,"endColumn":30},{"ruleId":"449","severity":1,"message":"471","line":17,"column":6,"nodeType":"451","endLine":17,"endColumn":12,"suggestions":"472"},{"ruleId":"453","severity":1,"message":"454","line":21,"column":5,"nodeType":"455","endLine":34,"endColumn":7},{"ruleId":"453","severity":1,"message":"454","line":46,"column":5,"nodeType":"455","endLine":59,"endColumn":7},{"ruleId":"442","severity":1,"message":"457","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":18},{"ruleId":"442","severity":1,"message":"461","line":2,"column":8,"nodeType":"444","messageId":"445","endLine":2,"endColumn":10},{"ruleId":"442","severity":1,"message":"461","line":2,"column":8,"nodeType":"444","messageId":"445","endLine":2,"endColumn":10},{"ruleId":"463","severity":1,"message":"473","line":23,"column":5,"nodeType":"455","endLine":27,"endColumn":6},{"ruleId":"442","severity":1,"message":"457","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":18},{"ruleId":"442","severity":1,"message":"474","line":5,"column":10,"nodeType":"444","messageId":"445","endLine":5,"endColumn":19},{"ruleId":"442","severity":1,"message":"461","line":2,"column":8,"nodeType":"444","messageId":"445","endLine":2,"endColumn":10},{"ruleId":"442","severity":1,"message":"462","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":16},{"ruleId":"449","severity":1,"message":"475","line":13,"column":6,"nodeType":"451","endLine":13,"endColumn":12,"suggestions":"476"},{"ruleId":"442","severity":1,"message":"461","line":2,"column":8,"nodeType":"444","messageId":"445","endLine":2,"endColumn":10},{"ruleId":"442","severity":1,"message":"477","line":10,"column":33,"nodeType":"444","messageId":"445","endLine":10,"endColumn":39},{"ruleId":"442","severity":1,"message":"478","line":10,"column":50,"nodeType":"444","messageId":"445","endLine":10,"endColumn":59},{"ruleId":"449","severity":1,"message":"479","line":36,"column":6,"nodeType":"451","endLine":36,"endColumn":30,"suggestions":"480"},{"ruleId":"449","severity":1,"message":"481","line":43,"column":6,"nodeType":"451","endLine":43,"endColumn":8,"suggestions":"482"},{"ruleId":"442","severity":1,"message":"461","line":7,"column":8,"nodeType":"444","messageId":"445","endLine":7,"endColumn":10},{"ruleId":"442","severity":1,"message":"446","line":15,"column":11,"nodeType":"444","messageId":"445","endLine":15,"endColumn":18},{"ruleId":"449","severity":1,"message":"483","line":39,"column":6,"nodeType":"451","endLine":39,"endColumn":8,"suggestions":"484"},{"ruleId":"442","severity":1,"message":"477","line":10,"column":33,"nodeType":"444","messageId":"445","endLine":10,"endColumn":39},{"ruleId":"442","severity":1,"message":"478","line":10,"column":50,"nodeType":"444","messageId":"445","endLine":10,"endColumn":59},{"ruleId":"442","severity":1,"message":"457","line":4,"column":21,"nodeType":"444","messageId":"445","endLine":4,"endColumn":29},{"ruleId":"449","severity":1,"message":"479","line":30,"column":6,"nodeType":"451","endLine":30,"endColumn":8,"suggestions":"485"},{"ruleId":"449","severity":1,"message":"479","line":35,"column":6,"nodeType":"451","endLine":35,"endColumn":30,"suggestions":"486"},{"ruleId":"449","severity":1,"message":"481","line":42,"column":6,"nodeType":"451","endLine":42,"endColumn":8,"suggestions":"487"},{"ruleId":"449","severity":1,"message":"488","line":29,"column":6,"nodeType":"451","endLine":29,"endColumn":25,"suggestions":"489"},{"ruleId":"442","severity":1,"message":"490","line":1,"column":100,"nodeType":"444","messageId":"445","endLine":1,"endColumn":108},{"ruleId":"449","severity":1,"message":"491","line":50,"column":6,"nodeType":"451","endLine":50,"endColumn":8,"suggestions":"492"},{"ruleId":"449","severity":1,"message":"493","line":83,"column":6,"nodeType":"451","endLine":83,"endColumn":13,"suggestions":"494"},{"ruleId":"442","severity":1,"message":"495","line":5,"column":10,"nodeType":"444","messageId":"445","endLine":5,"endColumn":18},{"ruleId":"442","severity":1,"message":"477","line":10,"column":33,"nodeType":"444","messageId":"445","endLine":10,"endColumn":39},{"ruleId":"442","severity":1,"message":"478","line":10,"column":50,"nodeType":"444","messageId":"445","endLine":10,"endColumn":59},{"ruleId":"442","severity":1,"message":"496","line":11,"column":9,"nodeType":"444","messageId":"445","endLine":11,"endColumn":20},{"ruleId":"449","severity":1,"message":"479","line":64,"column":6,"nodeType":"451","endLine":64,"endColumn":38,"suggestions":"497"},{"ruleId":"449","severity":1,"message":"498","line":68,"column":6,"nodeType":"451","endLine":68,"endColumn":8,"suggestions":"499"},{"ruleId":"449","severity":1,"message":"481","line":75,"column":6,"nodeType":"451","endLine":75,"endColumn":8,"suggestions":"500"},{"ruleId":"442","severity":1,"message":"490","line":1,"column":100,"nodeType":"444","messageId":"445","endLine":1,"endColumn":108},{"ruleId":"449","severity":1,"message":"491","line":42,"column":6,"nodeType":"451","endLine":42,"endColumn":8,"suggestions":"501"},{"ruleId":"458","severity":1,"message":"502","line":1,"column":1,"nodeType":"460","endLine":23,"endColumn":2},{"ruleId":"442","severity":1,"message":"503","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":13},{"ruleId":"442","severity":1,"message":"503","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":13},{"ruleId":"442","severity":1,"message":"503","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":13},{"ruleId":"442","severity":1,"message":"504","line":2,"column":10,"nodeType":"444","messageId":"445","endLine":2,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["505"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'token' is assigned a value but never used.","'useState' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'cn' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'inputValue'. Either include it or remove the dependency array.",["506"],["507"],"'LinkComponent' is defined but never used.","'Icons' is defined but never used.","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["508"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'hexToRgba' is defined but never used.","React Hook useEffect has a missing dependency: 'currentFile'. Either include it or remove the dependency array.",["509"],"'errors' is assigned a value but never used.","'resetForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.",["510"],"React Hook useEffect has a missing dependency: 'setTagsValue'. Either include it or remove the dependency array.",["511"],"React Hook useEffect has missing dependencies: 'history', 'id', and 'setRecipe'. Either include them or remove the dependency array.",["512"],["513"],["514"],["515"],"React Hook useEffect has a missing dependency: 'getSubscriptions'. Either include it or remove the dependency array.",["516"],"'Checkbox' is defined but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["517"],"React Hook useEffect has missing dependencies: 'history', 'id', 'loading', and 'setValue'. Either include them or remove the dependency array.",["518"],"'Redirect' is defined but never used.","'authContext' is assigned a value but never used.",["519"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["520"],["521"],["522"],"Assign array to a variable before exporting as module default","'React' is defined but never used.","'useTags' is defined but never used.",{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"525","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"532","fix":"540"},{"desc":"534","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"534","fix":"552"},{"desc":"544","fix":"553"},"Update the dependencies array to be: [history]",{"range":"554","text":"555"},"Update the dependencies array to be: [inputValue, value]",{"range":"556","text":"557"},{"range":"558","text":"557"},"Update the dependencies array to be: [active, page]",{"range":"559","text":"560"},"Update the dependencies array to be: [currentFile, file]",{"range":"561","text":"562"},"Update the dependencies array to be: [getRecipes, recipesPage, tagsValue]",{"range":"563","text":"564"},"Update the dependencies array to be: [setTagsValue]",{"range":"565","text":"566"},"Update the dependencies array to be: [history, id, setRecipe]",{"range":"567","text":"568"},"Update the dependencies array to be: [getRecipes]",{"range":"569","text":"570"},{"range":"571","text":"564"},{"range":"572","text":"566"},"Update the dependencies array to be: [getSubscriptions, subscriptionsPage]",{"range":"573","text":"574"},"Update the dependencies array to be: [setValue]",{"range":"575","text":"576"},"Update the dependencies array to be: [history, id, loading, setValue, value]",{"range":"577","text":"578"},"Update the dependencies array to be: [getRecipes, recipesPage, tagsValue, user]",{"range":"579","text":"580"},"Update the dependencies array to be: [getUser]",{"range":"581","text":"582"},{"range":"583","text":"566"},{"range":"584","text":"576"},[3590,3592],"[history]",[643,650],"[inputValue, value]",[562,569],[561,567],"[active, page]",[404,410],"[currentFile, file]",[864,888],"[getRecipes, recipesPage, tagsValue]",[1029,1031],"[setTagsValue]",[1135,1137],"[history, id, setRecipe]",[690,692],"[getRecipes]",[894,918],[1059,1061],[745,764],"[getSubscriptions, subscriptionsPage]",[1607,1609],"[setValue]",[2329,2336],"[history, id, loading, setValue, value]",[1520,1552],"[getRecipes, recipesPage, tagsValue, user]",[1593,1595],"[getUser]",[1736,1738],[1439,1441]]